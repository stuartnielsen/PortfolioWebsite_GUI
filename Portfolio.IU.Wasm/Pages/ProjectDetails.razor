@page "/projectdetails/{ProjectId:int}"
@inject HttpClient http
@using Portfolio.Shared

<h3>ProjectDetails @ProjectId</h3>

<div class="form-group">
    <label asp-for="Title">Project Title:</label>
    <input @bind-value="@projectName" class="form-control" />
</div>
<div class="form-group">
    <label asp-for="Body">Requirements: </label>
    <input @bind-value="@projectRequirements" class="form-control" rows="4">
</div>
<div class="form-group">
    <label asp-for="Body">Design: </label>
    <input @bind-value="@projectDesign" class="form-control" rows="4">
</div>
<div class="form-group">
    <label asp-for="Body">Completion Date: </label>
    <input @bind-value="projectCompletionDate" type="date" />
</div>
<button @onclick="updateProject">save</button>


@code {     [Parameter]
    public int ProjectId { get; set; }

    private string projectName;
    private string projectRequirements;
    private string projectDesign;
    private DateTime projectCompletionDate;

    public Project SelectedProject { get; set; } = new Project();


    protected override async Task OnInitializedAsync()
    {
        if (ProjectId == 0)
            return;
        var projects = (await http.GetFromJsonAsync<IEnumerable<Project>>("/api/project/"));
        SelectedProject = projects.FirstOrDefault(p => p.Id == ProjectId);

        projectName = SelectedProject.Title;
        projectRequirements = SelectedProject.Requirements;
        projectDesign = SelectedProject.Design;
        projectCompletionDate = SelectedProject.CompletionDate;
    }

    private async Task updateProject()
    {
        var project = new Project
        {
            Id = ProjectId,
            Title = projectName,
            Requirements = projectRequirements,
            Design = projectDesign,
            CompletionDate = projectCompletionDate
        };
        try
        {
            var response = await http.PostAsJsonAsync("/api/project/update", project);
        }
        catch (Exception e)
        {
        }
    } }
